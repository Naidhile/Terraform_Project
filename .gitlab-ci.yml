stages:
  - init
  - validate
  - plan
  - apply

variables:
  TF_ENV: "dev"  # Specify the environment (dev, staging, production)
  TF_WORKING_DIR: "environment/$TF_ENV"
  TF_VERSION: "1.5.0"

before_script:
  - apt-get update && apt-get install -y unzip curl
  - echo "Installing Terraform..."
  - curl -fsSL https://get.docker.com | bash  # Install Docker
  - docker --version  # Verify Docker installation
  - terraform --version || echo "Terraform is managed by Docker"

# Stage 1: Initialize Terraform
terraform-init:
  stage: init
  script:
    - echo "Initializing Terraform for $TF_ENV environment..."
    - cd $TF_WORKING_DIR
    - docker run --rm -v $(pwd):/workspace -w /workspace kreuzwerker/docker:2.0.0 init
  only:
    - main

# Stage 2: Validate Terraform
terraform-validate:
  stage: validate
  script:
    - echo "Validating Terraform configuration..."
    - cd $TF_WORKING_DIR
    - docker run --rm -v $(pwd):/workspace -w /workspace kreuzwerker/docker:2.0.0 validate
  only:
    - main

# Stage 3: Plan Terraform Changes
terraform-plan:
  stage: plan
  script:
    - echo "Planning Terraform changes..."
    - cd $TF_WORKING_DIR
    - docker run --rm -v $(pwd):/workspace -w /workspace kreuzwerker/docker:2.0.0 plan -out=tfplan
  artifacts:
    paths:
      - $TF_WORKING_DIR/tfplan
  only:
    - main

# Stage 4: Apply Terraform Changes
terraform-apply:
  stage: apply
  script:
    - echo "Applying Terraform changes..."
    - cd $TF_WORKING_DIR
    - docker run --rm -v $(pwd):/workspace -w /workspace kreuzwerker/docker:2.0.0 apply -auto-approve tfplan
  only:
    - main
