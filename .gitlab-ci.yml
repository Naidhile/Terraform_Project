stages:
  - build
  - test
  - security
  - terraform_plan
  - approval
  - terraform_apply
  - cleanup

variables:
  TF_IN_AUTOMATION: "true"
  TF_VERSION: "1.10.5"   # Adjust this based on the required Terraform version

before_script:
  - apt-get update && apt-get install -y wget unzip
  - wget https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip
  - unzip terraform_${TF_VERSION}_linux_amd64.zip
  - mv terraform /usr/local/bin/

# Build stage
build:
  stage: build
  script:
    - echo "Building application or environment setup"
    # Add your build commands here (e.g., building your application or Docker images)

# Test stage
test:
  stage: test
  script:
    - echo "Running tests"
    - terraform version                # Check Terraform version
    - terraform init                   # Initialize Terraform (can be skipped if already done in `before_script`)
    - terraform validate               # Validate the Terraform configuration

# Security stage
security:
  stage: security
  script:
    - echo "Running security checks"
    # Run security checks such as static code analysis, vulnerability scans, etc.
    # You can integrate tools like `checkov`, `tflint`, or `terraform-compliance` for security checks

# Terraform plan stage
terraform_plan:
  stage: terraform_plan
  script:
    - echo "Running Terraform plan"
    - terraform init && terraform plan -out=tfplan -var "container_name=my_container" -var "image=my_docker_image" -var "external_port=8082"
  artifacts:
    paths:
      - tfplan                         # Store the plan artifact for later use
    expire_in: 1 hour

# Approval stage
approval:
  stage: approval
  script:
    - echo "Waiting for manual approval"
  when: manual  # This will pause the pipeline for manual approval

# Terraform apply stage
terraform_apply:
  stage: terraform_apply
  script:
    - echo "Applying Terraform plan"
    - terraform apply -auto-approve tfplan  # Automatically apply the plan

# Cleanup stage
cleanup:
  stage: cleanup
  script:
    - echo "Cleaning up resources"
    - terraform destroy -auto-approve  # Destroy the resources after test or cleanup
  only:
    - master  # Run this cleanup only on the `master` branch (or your main branch)
