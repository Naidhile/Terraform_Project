stages:
  - clone
  - setup
  - initialize
  - plan
  - apply
  - test
  - cleanup

variables:
  GITHUB_REPO: "githubuser/config-management-repo"
  TF_WORKING_DIR: "/workspace" # Working directory inside the container

clone_repository:
  stage: clone
  script:
    - echo "Cloning GitHub repository for Terraform configuration files..."
    - git clone https://github.com/Naidhile/Terraform_Project $TF_WORKING_DIR
    - echo "Repository cloned successfully."
    - ls -al $TF_WORKING_DIR

install_dependencies:
  stage: setup
  image: nginx:latest  # Using nginx:latest image as per your request
  script:
    - echo "Installing dependencies inside nginx container"
    - apt-get update && apt-get install -y unzip curl  # Installing necessary dependencies
    - curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
    - apt-add-repository "deb https://apt.releases.hashicorp.com $(lsb_release -cs) main"
    - apt-get update
    - apt-get install terraform  # Install Terraform in the container
    - terraform --version  # Verify installation

initialize_terraform:
  stage: initialize
  image: nginx:latest  # Continuing with nginx:latest image
  script:
    - echo "Initializing Terraform configuration..."
    - cd $TF_WORKING_DIR
    - terraform init
    - echo "Terraform initialization completed."

plan_infrastructure:
  stage: plan
  image: nginx:latest  # Continuing with nginx:latest image
  script:
    - echo "Creating Terraform execution plan..."
    - cd $TF_WORKING_DIR
    - terraform plan -out=tfplan
    - echo "Terraform plan created successfully."
  artifacts:
    paths:
      - $TF_WORKING_DIR/tfplan

apply_configuration:
  stage: apply
  image: nginx:latest  # Continuing with nginx:latest image
  script:
    - echo "Applying Terraform configuration..."
    - cd $TF_WORKING_DIR
    - terraform apply -auto-approve tfplan
    - echo "Terraform configuration applied successfully."

test_configuration:
  stage: test
  image: nginx:latest  # Continuing with nginx:latest image
  script:
    - echo "Testing deployed infrastructure..."
    - cd $TF_WORKING_DIR
    - terraform output
    - echo "Terraform output fetched successfully."

cleanup:
  stage: cleanup
  image: nginx:latest  # Continuing with nginx:latest image
  script:
    - echo "Cleaning up the environment..."
    - rm -rf $TF_WORKING_DIR
    - echo "Cleanup completed."
