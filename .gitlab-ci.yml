stages:
  - clone
  - setup
  - initialize
  - plan
  - apply
  - test
  - cleanup

variables:
  TF_VERSION: "1.0.0"
  TF_PROJECT_DIR: "/terraform"

before_script:
  - echo "Installing Terraform..."
  - curl -LO https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip
  - unzip terraform_${TF_VERSION}_linux_amd64.zip
  - mv terraform /usr/local/bin/
  - terraform --version

clone:
  stage: clone
  script:
    - echo "Cloning the repository..."
    - git clone https://github.com/Naidhile/Terraform_Project.git
    - cd Terraform_Project
    - echo "Repository cloned successfully."

setup:
  stage: setup
  script:
    - echo "Setting up Terraform directory..."
    - mkdir -p $TF_PROJECT_DIR  # Create the directory if it doesn't exist
    - cd $TF_PROJECT_DIR
    - echo "Setup complete."

initialize:
  stage: initialize
  script:
    - echo "Initializing Terraform..."
    - mkdir -p $TF_PROJECT_DIR  # Ensure the directory exists
    - cd $TF_PROJECT_DIR
    - terraform init
    - echo "Terraform initialization complete."

plan:
  stage: plan
  script:
    - echo "Running Terraform plan..."
    - cd $TF_PROJECT_DIR
    - terraform plan -out=plan.tfout
    - echo "Terraform plan complete."

apply:
  stage: apply
  script:
    - echo "Applying Terraform plan..."
    - cd $TF_PROJECT_DIR
    - terraform apply -auto-approve plan.tfout
    - echo "Terraform apply complete."

test:
  stage: test
  script:
    - echo "Running tests..."
    - cd $TF_PROJECT_DIR
    - terraform show
    - echo "Tests complete."

cleanup:
  stage: cleanup
  script:
    - echo "Cleaning up Terraform state..."
    - cd $TF_PROJECT_DIR
    - terraform destroy -auto-approve
    - echo "Cleanup complete."
