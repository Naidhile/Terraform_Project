stages:
  - build
  - test
  - security
  - terraform_plan
  - approval
  - terraform_apply
  - post_deployment_validation
  - cleanup

# Build Docker image containing Terraform
build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t terraform-project .

# Validate Terraform code (check if it's valid)
test:
  stage: test
  image: hashicorp/terraform:latest
  script:
    - terraform init
    - terraform validate
    - terraform fmt -check

# Run security checks on Terraform code
security:
  stage: security
  image: python:3.8
  script:
    - pip install tflint checkov tfsec
    - tflint .
    - checkov -d .
    - tfsec .

# Generate Terraform plan
terraform_plan:
  stage: terraform_plan
  image: hashicorp/terraform:latest
  script:
    - terraform init
    - terraform plan -out=terraform-plan.txt
  artifacts:
    paths:
      - terraform-plan.txt

# Manual Approval Stage
approval:
  stage: approval
  script:
    - echo "Waiting for manual approval..."
  when: manual
  allow_failure: false

# Apply Terraform changes (Provision infrastructure)
terraform_apply:
  stage: terraform_apply
  image: hashicorp/terraform:latest
  script:
    - terraform init
    - terraform apply -auto-approve terraform-plan.txt
  dependencies:
    - terraform_plan

# Post-deployment validation
post_deployment_validation:
  stage: post_deployment_validation
  image: curlimages/curl:latest
  script:
    - curl -f http://my-deployed-service/health || exit 1

# Clean up unnecessary Docker resources
cleanup:
  stage: cleanup
  image: docker:latest
  script:
    - docker system prune -f
